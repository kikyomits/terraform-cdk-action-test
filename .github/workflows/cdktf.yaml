name: Cdktf

permissions:
  packages: read
  contents: read
  pull-requests: write
  id-token: write

on:
  workflow_call:
    inputs:
      stack:
        type: string
        description: ""
        required: true
      mode:
        type: string
        required: false
        default: 'plan-only'
        description: 'cdktf command, expected either of `plan-only` or `auto-approve-apply`'
      working-dir:
        type: string
        default: .
        required: false
      node-version:
        type: string
        description: nodejs version
        required: false
        default: 18
      tf-version:
        type: string
        required: false
        default: '1.3.6'

jobs:
  cdktf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      # install node_modules
      - name: Install dependencies
        working-directory: ${{ inputs.working-dir }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: npm ci

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.tf-version }}
          terraform_wrapper: false

      - name: Generate module and provider bindings
        working-directory: ${{ inputs.working-dir }}
        shell: bash
        run: npx cdktf get

      - name: Get CDKTF version
        id: get-cdktf-version
        working-directory: ${{ inputs.working-dir }}
        run: echo "cdktf-version=$(npx cdktf --version})" >> $GITHUB_OUTPUT

      - name: Run Terraform CDK
        uses: kikyomits/terraform-cdk-action@v0.0.0
        with:
          terraformVersion: ${{ inputs.tf-version }}
          cdktfVersion: ${{ steps.get-cdktf-version.outputs.cdktf-version }}
          stackName: ${{ inputs.stack }}
          mode: ${{ inputs.mode }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          workingDirectory: ${{ inputs.working-dir }}
